{"version":3,"sources":["images/trash-alt-solid.svg","images/plus-square-solid.svg","components/Dashboard/Dashboard.js","images/copy-regular.svg","components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","className","data-dropid","id","style","backgroundColor","color","onDragOver","e","preventDefault","onDrop","dropCard","src","trash","alt","title","onClick","deleteDashboard","createCard","maxLength","data-key","defaultValue","onKeyDown","onBlur","children","createDashboardIcon","createDashboard","Card","refDescription","useRef","draggable","onDragStart","dragCard","target","tagName","current","classList","toggle","copy","copyCard","deleteCard","name","rows","description","ref","getRandomInRange","min","max","fractionDigits","number","Math","random","parseFloat","toFixed","App","dashboardBackgroundColors","cardNameBackgrounds","initialDashboard","dashboard","cards","useState","todos","setTodos","push","length","code","split","dashNo","parseInt","splice","toString","cardNo","lastCard","orgCard","dataTransfer","setData","dropId","el","undefined","dataset","dropid","parentElement","findDropId","t_code","t_dashNo","s_code","getData","s_dashNo","s_cardNo","clickTitle","handleKeyDown","key","blur","field","original","value","handleBlur","newVal","valChange","map","dashboardIndex","card","cardIndex","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5be1fed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trash-alt-solid.6346df54.svg\";","export default __webpack_public_path__ + \"static/media/plus-square-solid.bb533173.svg\";","import React from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport trash from \"../../images/trash-alt-solid.svg\";\r\nimport createDashboardIcon from \"../../images/plus-square-solid.svg\";\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <div className=\"dashboard-wrapper\">\r\n      <div\r\n        data-dropid={props.id} \r\n        className=\"dashboard\"\r\n        style={{\r\n          backgroundColor: props.color,\r\n        }}\r\n        onDragOver={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n        onDrop={props.dropCard}\r\n      >\r\n        <div className=\"trash-create\">\r\n          <img\r\n            id={\"dd\" + props.id}\r\n            src={trash}\r\n            className=\"trash-logo\"\r\n            alt=\"Delete this dashboard\"\r\n            title=\"Delete this dashboard\"\r\n            onClick={props.deleteDashboard}\r\n          />\r\n          <button\r\n            id={\"cc\" + props.id}\r\n            className=\"create-card\"\r\n            onClick={props.createCard}            \r\n            title=\"Create a new card\"\r\n          >\r\n            Create card\r\n          </button>\r\n        </div>\r\n        <div className=\"dashboard-header\">\r\n          <input            \r\n            maxLength=\"20\"\r\n            className=\"dashboardName\"\r\n            data-key={props.id}\r\n            defaultValue={props.title}\r\n            onClick={props.onClick}\r\n            onKeyDown={props.onKeyDown}\r\n            onBlur={props.onBlur}\r\n            id={[\"in-\" + props.id]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"cards\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img\r\n        className=\"create-dashboard-icon\"\r\n        src={createDashboardIcon}\r\n        alt=\"Create a new dashboard\"\r\n        title=\"Create a new dashboard\"\r\n        onClick={props.createDashboard}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/copy-regular.0ec8ada5.svg\";","import React, { useRef } from \"react\";\r\nimport \"./Card.css\";\r\nimport trash from \"../../images/trash-alt-solid.svg\";\r\nimport copy from \"../../images/copy-regular.svg\";\r\n\r\nconst Card = (props) => {\r\n  const refDescription = useRef(null);\r\n\r\n  return (\r\n    <div\r\n      draggable\r\n      onDragStart={(e) => {\r\n        props.dragCard(e, props.id);\r\n      }}\r\n      className=\"card\"\r\n      onClick={(e) => {\r\n        if (e.target.tagName === \"DIV\") {\r\n          refDescription.current.classList.toggle(\"hide\");\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"header\">\r\n        <div className=\"copydeleteCard\">\r\n          <img\r\n            id={\"c\" + props.id}\r\n            src={copy}\r\n            className=\"card-copy-logo\"\r\n            alt=\"Duplicate this card\"\r\n            onClick={props.copyCard}\r\n            title=\"Duplicate this card\"\r\n          />\r\n          <img\r\n            id={\"d\" + props.id}\r\n            src={trash}\r\n            className=\"card-trash-logo\"\r\n            alt=\"Delete this card\"\r\n            onClick={props.deleteCard}\r\n            title=\"Delete this card\"\r\n          />\r\n        </div>\r\n        <input\r\n          style={{\r\n            backgroundColor: props.color,\r\n          }}\r\n          maxLength=\"20\"\r\n          className=\"cardName\"\r\n          defaultValue={props.name}\r\n          onClick={props.onClick}\r\n          onKeyDown={props.onKeyDown}\r\n          onBlur={props.onBlur}\r\n          id={\"in-\" + props.id}\r\n        />\r\n      </div>\r\n      <div>\r\n        <textarea\r\n          rows=\"2\"\r\n          className=\"description hide\"\r\n          defaultValue={props.description}\r\n          onClick={props.onClick}\r\n          onKeyDown={props.onKeyDown}\r\n          onBlur={props.onBlur}\r\n          ref={refDescription}\r\n          id={\"id-\" + props.id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Card from \"./components/Card/Card\";\r\nimport \"./App.css\";\r\n\r\n// véletlenszám generátor, adott tartományon belül, a megadott tizedesig kerekítve (0 = egész szám)\r\nconst getRandomInRange = (min, max, fractionDigits) => {\r\n  let number = Math.random() * (max - min) + min;\r\n\r\n  return parseFloat(number.toFixed(fractionDigits));\r\n};\r\n\r\nfunction App() {\r\n  const dashboardBackgroundColors = [\r\n    \"rgb(234, 66, 53)\",\r\n    \"rgb(66, 147, 159)\",\r\n    \"rgb(172, 146, 145)\",\r\n  ];\r\n\r\n  const cardNameBackgrounds = [\r\n    \"rgb(250, 188, 5)\",\r\n    \"rgb(66, 134, 245)\",\r\n    \"rgb(52, 168, 83)\",\r\n  ];\r\n\r\n  const demoDashboard = [\r\n    {\r\n      dashboard: \"Untitled Dashboard\",\r\n      color: \"rgb(234, 66, 53)\",\r\n      cards: [],\r\n    },\r\n    {\r\n      dashboard: \"Háztartás\",\r\n      color: \"rgb(66, 147, 159)\",\r\n      cards: [\r\n        {\r\n          name: \"Mosogass el!\",\r\n          color: \"rgb(250, 188, 5)\",\r\n          description: \"Minden nap.\",\r\n        },\r\n        {\r\n          name: \"Vidd ki a szemetet\",\r\n          color: \"rgb(66, 134, 245)\",\r\n          description: \"Minden hétfőn\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      dashboard: \"Kocsi\",\r\n      color: \"rgb(172, 146, 145)\",\r\n      cards: [\r\n        {\r\n          name: \"Műszaki vizsga\",\r\n          color: \"rgb(52, 168, 83)\",\r\n          description: \"2021. június 23.\",\r\n        },\r\n        {\r\n          name: \"Autómosás\",\r\n          color: \"rgb(250, 188, 5)\",\r\n          description: \"EHRLE AUTÓMOSÓ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      dashboard: \"Munka\",\r\n      color: \"rgb(234, 66, 53)\",\r\n      cards: [\r\n        {\r\n          name: \"Keresés\",\r\n          color: \"rgb(66, 147, 159)\",\r\n          description: \"Folyamatban.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      dashboard: \"Család\",\r\n      color: \"rgb(172, 146, 145)\",\r\n      cards: [\r\n        {\r\n          name: \"Kutyasétáltatás\",\r\n          color: \"rgb(52, 168, 83)\",\r\n          description: \"8 óra után.\",\r\n        },\r\n        {\r\n          name: \"Gyerek ellenőrzése\",\r\n          color: \"rgb(250, 188, 5)\",\r\n          description: \"Mi volt ma az iskolában? Házifeladat ellenőrzése.\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const initialDashboard = {\r\n    dashboard: \"Untitled Dashboard\",\r\n    color: dashboardBackgroundColors[getRandomInRange(0, 2, 0)],\r\n    cards: [],\r\n  };\r\n\r\n  const DEMO_MODE = false; //TODO erre van beépített React módszer, de kezdésnek jó lesz.\r\n\r\n  const [todos, setTodos] = useState(() => {\r\n    return DEMO_MODE ? demoDashboard : [initialDashboard];\r\n  });\r\n\r\n  /* ha ezt használjuk, akkor  nem kell az index.html-t \"birizgálni\"\r\n  useEffect(() => {\r\n    const link1 = document.createElement(\"link\");\r\n    link1.href = \"https://fonts.gstatic.com\";\r\n    link1.rel = \"preconnect\";\r\n    link1.async = true;\r\n    document.head.appendChild(link1);\r\n\r\n    const link2 = document.createElement(\"link\");\r\n    link2.href =\r\n      \"https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap\";\r\n    link2.rel = \"stylesheet\";\r\n    link2.async = true;\r\n    document.head.appendChild(link2);\r\n  }, []);\r\n */\r\n  const createDashboard = () => {\r\n    todos.push({\r\n      dashboard: \"Untitled Dashboard\",\r\n      color: dashboardBackgroundColors[getRandomInRange(0, 2, 0)], //ide írom a tömbből véletlenül választott elemet\r\n      cards: [],\r\n    });\r\n    setTodos([...todos]);\r\n    // console.log(todos);\r\n  };\r\n\r\n  const deleteDashboard = (e) => {\r\n    if (todos.length === 1) {\r\n      return;\r\n    }\r\n    let code = e.target.id.split(\"-\");\r\n    let dashNo = parseInt(code[1]);\r\n    todos.splice(dashNo, 1);\r\n    // console.log(todos);\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  const createCard = (e) => {\r\n    let code = e.target.id.split(\"-\");\r\n    let dashNo = parseInt(code[1]);\r\n\r\n    todos[dashNo].cards.push({\r\n      name: \"New Card \" + (todos[dashNo].cards.length + 1).toString(),\r\n      description: \"enter card description\",\r\n      color: cardNameBackgrounds[getRandomInRange(0, 2, 0)],\r\n    });\r\n    // console.log(todos);\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  const deleteCard = (e) => {\r\n    let code = e.target.id.split(\"-\");\r\n    let dashNo = parseInt(code[1]);\r\n    let cardNo = parseInt(code[2]);\r\n\r\n    todos[dashNo].cards.splice(cardNo, 1);\r\n    // console.log(todos);\r\n    // console.log(cardNo);\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  const copyCard = (e) => {\r\n    let code = e.target.id.split(\"-\");\r\n    let dashNo = parseInt(code[1]);\r\n    let cardNo = parseInt(code[2]);\r\n    let lastCard = todos[dashNo].cards.length;\r\n    let orgCard = todos[dashNo].cards[cardNo];\r\n\r\n    //itt a bűvös pseudo-push (ha mégis más szín kell, akkor: 'color: cardNameBackgrounds[getRandomInRange(0, 2, 0)]')\r\n    todos[dashNo].cards[lastCard] = {\r\n      name: orgCard.name,\r\n      description: orgCard.description,\r\n      color: orgCard.color,\r\n    };\r\n\r\n    setTodos([...todos]);\r\n    //console.log(todos[dashNo].cards)\r\n  };\r\n\r\n  const dragCard = (e, id) => {\r\n    e.dataTransfer.setData(\"id\", id);\r\n  };\r\n\r\n  function findDropId(el) {\r\n    do {\r\n      if (el.dataset.dropid !== undefined) {\r\n        return el.dataset.dropid;\r\n      }\r\n      el = el.parentElement;\r\n    } while (el.parentElement);\r\n    return null;\r\n  }\r\n\r\n  const dropCard = (e) => {\r\n    const dropId = findDropId(e.target);\r\n\r\n    if (dropId === null) {\r\n      return;\r\n    }\r\n\r\n    let t_code = dropId.split(\"-\");\r\n    let t_dashNo = parseInt(t_code[1]);\r\n\r\n    let s_code = e.dataTransfer.getData(\"id\").split(\"-\");\r\n    let s_dashNo = parseInt(s_code[1]);\r\n    let s_cardNo = parseInt(s_code[2]);\r\n\r\n    todos[t_dashNo].cards.push(todos[s_dashNo].cards[s_cardNo]);\r\n    setTodos([...todos]);\r\n\r\n    todos[s_dashNo].cards.splice(s_cardNo, 1);\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  const clickTitle = (e) => {\r\n    // console.log(\"clicked\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  /*   const changeTitle = (e) => {\r\n    console.log(e);\r\n  }; */\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.target.blur();\r\n    }\r\n    if (e.key === \"Escape\") {\r\n      let code = e.target.id.split(\"-\");\r\n      let dashNo = parseInt(code[2]);\r\n      let cardNo = parseInt(code[3]);\r\n      let field = code[0][1];\r\n      let original = \"\";\r\n\r\n      if (code[1] === \"d\") {\r\n        original = todos[dashNo].dashboard;\r\n      } else {\r\n        if (field === \"n\") {\r\n          original = todos[dashNo].cards[cardNo].name;\r\n        } else {\r\n          original = todos[dashNo].cards[cardNo].description;\r\n        }\r\n      }\r\n\r\n      e.target.value = original;\r\n      // console.log(todos);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    // console.log(e.target);\r\n    valChange(e.target);\r\n  };\r\n\r\n  function valChange(target) {\r\n    let code = target.id.split(\"-\");\r\n    let dashNo = parseInt(code[2]);\r\n    let cardNo = parseInt(code[3]);\r\n\r\n    let field = code[0][1];\r\n    let newVal = target.value;\r\n\r\n    if (code[1] === \"d\") {\r\n      todos[dashNo].dashboard = newVal;\r\n    } else {\r\n      if (field === \"n\") {\r\n        todos[dashNo].cards[cardNo].name = newVal;\r\n      } else {\r\n        todos[dashNo].cards[cardNo].description = newVal;\r\n      }\r\n    }\r\n    // console.log(todos);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {todos.map((dashboard, dashboardIndex) => {\r\n        return (\r\n          <Dashboard\r\n            color={dashboard.color}\r\n            key={\"d-\" + dashboardIndex + dashboard.dashboard + todos.length}\r\n            id={\"d-\" + dashboardIndex}\r\n            title={dashboard.dashboard}\r\n            onClick={clickTitle}\r\n            onKeyDown={handleKeyDown}\r\n            onBlur={handleBlur}\r\n            createDashboard={createDashboard}\r\n            deleteDashboard={deleteDashboard}\r\n            createCard={createCard}\r\n            dropCard={dropCard}\r\n          >\r\n            {dashboard.cards.map((card, cardIndex) => {\r\n              return (\r\n                <Card\r\n                  color={card.color}\r\n                  key={\r\n                    \"c-\" +\r\n                    dashboardIndex +\r\n                    \"-\" +\r\n                    cardIndex +\r\n                    card.name +\r\n                    Date.now()\r\n                  }\r\n                  id={\"c-\" + dashboardIndex + \"-\" + cardIndex}\r\n                  name={card.name}\r\n                  description={card.description}\r\n                  onClick={clickTitle}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={handleBlur}\r\n                  copyCard={copyCard}\r\n                  deleteCard={deleteCard}\r\n                  dragCard={dragCard}\r\n                />\r\n              );\r\n            })}\r\n          </Dashboard>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}